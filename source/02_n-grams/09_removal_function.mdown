**Prerequisites**

- functions (basic notation)

# Stop word removal as a function

This unit illustrates how one might define stop word removal as a mathematical function $\mathrm{del}$ (read *delete*).

First, we fix some alphabet $\Sigma$ and let $S$ be some finite set of symbols drawn from $\Sigma$.
For every such $S$, we defined a deletion function $\mathrm{del}_S$ that maps strings over $\Sigma$ to strings over $\Sigma - S$.
In mathematical notation, $\mathrm{del}_S: \Sigma^* \rightarrow (\Sigma - S)^*$.

This only tells us the domain and co-domain of $\mathrm{del}_S$, but not how exactly inputs and outputs are connected to each other.
For any string of the form $u_1 \cdots u_n$ (where $n \geq 0$ and each $u_i$ is a symbol drawn from $\Sigma$), we define
$$
\mathrm{del}_S(u_1 \cdots u_n)
    \is
    \begin{cases}
    \emptystring & \text{if } u_1 \cdots u_n = \emptystring\\
    \mathrm{del}_S(u_2 \cdots u_n) & \text{if } u_1 \in S\\
    u_1 \stringcat \mathrm{del}_S(u_2 \cdots u_n) & \text{otherwise}\\
    \end{cases}
$$

\begin{example}
Suppose $\Sigma \is \setof{a,b}$ and $S \is \setof{a}$.
Let $s \is abba$.
We compute $\mathrm{del}_S(s)$ in a stepwise fashion:

$$
\begin{align*}
\mathrm{del}_S(s)
&=
\mathrm{del}_S(abba)
\\
&=
\mathrm{del}_S(bba)
\\
&=
b \stringcat \mathrm{del}_S(ba)
\\
&=
b \stringcat b \stringcat \mathrm{del}_S(a)
\\
&=
b \stringcat b \stringcat \mathrm{del}_S()
\\
&=
b \stringcat b \stringcat \emptystring
\\
&=
b \stringcat b
\\
&=
bb
\end{align*}
$$

So $\mathrm{del}_S(abba) = bb$, as expected.
\end{example}

As you can see, $\mathrm{del}_S$ is partially defined in terms of itself:
the value of $\mathrm{del}_S(abba)$ is inferred from the value of $\mathrm{del}_S(bba)$.
This is called a **recursive** definition.

\begin{exercise}
Here is another recursively defined function.

$$
f(x,y) \is
    \begin{cases}
        x & \text{if } y \leq 1\\
        x + f(x,y-1) & \text{otherwise}\\
    \end{cases}
$$

What does this function do?
Is there a commonly used name for it?
\end{exercise}

\begin{exercise}
Give a recursive definition of a function that takes two arguments: a string $u \is u_1 \cdots u_n$ over alphabet $\Sigma$, and a set $S$ of symbols drawn from $\Sigma$.
The function returns $1$ if at least one member of $S$ occurs in $u$, and $0$ otherwise.
\end{exercise}
