**Prerequisites**

- general (big operators)
- <s>sets (cardinality)</s> (no longer needed)
- multisets (basics)

# Operations on multisets

## Standard set operations

The set operations union, intersection and relative complement can be generalized to multisets.

\begin{definition}
    Given two natural numbers $m$ and $n$ with $m \leq n$, let $\max(m,n) = n$ and $\min(m,n) = m$.
    Then for any two multisets $A_M$ and $B_M$
    <ul>
        <li>the union $A_M \cup B_M$ maps every $a$ to $\max(A_M(a), B_M(a))$,</li>
        <li>the intersection $A_M \cap B_M$ maps every $a$ to $\min(A_M(a), B_M(a))$</li>
        <li>the relative complement $A_M - B_M$ maps every $a$ to $A_M(a) - B_M(a)$ (or $0$ if the value would be negative)</li>
    </ul>
\end{definition}

\begin{example}
    Let $A_M \is \setof{a:3, b:2, c:1}$ and $B_M \is \setof{a:1, b:1, c:2, d:1}$.
    Then
    <ul>
        <li>$A_M \cup B_M = B_M \cup A_M = \setof{a:3, b:2, c:2, d:1}$</li>
        <li>$A_M \cap B_M = B_M \cap A_M = \setof{a:1, b:1, c:1}$</li>
        <li>$A_M - B_M = \setof{a:2, b:1, c:0}$</li>
        <li>$B_M - A_M = \setof{c:1, d:1}$</li>
    </ul>
\end{example}

```python
from collections import Counter

A = Counter({"a": 3, "b": 2, "c": 1})
B = Counter({"a": 1, "b": 1, "c": 2, "d": 1})

def multiset_operator(A, B, function):
    keys = set(A.keys()).union(set(B.keys()))
    return Counter({key: function(A.get(key,0), B.get(key,0)) for key in keys})

def multiset_union(A, B):
    return multiset_operator(A, B, max)

def multiset_intersection(A, B):
    return multiset_operator(A, B, min)

print("Union of\n{} and\n{} is\n{}\n".format(A, B, multiset_union(A, B)))
print("Intersection of\n{} and\n{} is\n{}\n".format(A, B, multiset_intersection(A, B)))
print("Relative complement of\n{} and\n{} is\n{}\n".format(A, B, A-B))
print("Relative complement of\n{} and\n{} is\n{}\n".format(B, A, B-A))
```

\begin{exercise}
Fill each gap with a matching multiset or operator.

<ol>
<li>
$\setof{a:3, b:2, c:1} \cup \setof{a:5, b:1, d:8} = \_$
</li>
<li>
$\setof{c:17} \_ \setof{a:5, b:1, d:8} = \setof{c:17}$
</li>
<li>
$\setof{a:3, b:3} \cup \_ = \setof{a:5, b:3, c:5, d:6}$
</li>
<li>
$\_ \_ \setof{a:5, b:1, d:8} = \setof{a:3, b:1}$
</li>
</ol>
\end{exercise}

Given a multiset $S_M$, we also write $S_M(a)$ for the count of $a$ in $S_M$.

\begin{example}
Let $A_M \is \setof{a:3, b:2, c:1}$ and $B_M \is \setof{a:1, b:1, c:1, d:1}$.
Then $A_M(a) = 3$ and $B_M(a) = 1$, whereas $A_M(c) = B_M(c) = 1$.
\end{example}

The **cardinality** of a multiset with finitely many elements is the sum of all its counts.
As a formula, this looks as follows:

$$
    \card{S_M} \is \sum_{s \in S_M} S_M(s)
$$

This formula uses the symbol $\sum$ as an abbreviation for addition.
The subscript on $\sum$ tell us that $s$ should be substituted in all possible ways by elements of $S_M$.
For multiset $S_M \is \setof{s_1: c_1, s_2: c_2, \ldots , s_n: c_n}$ the formula expands to $S_M(s_1) + S_M(s_2) + \cdots + S_M(s_n)$, which in turn reduces to $c_1 + c_2 + \cdots + c_n$.

\begin{example}
    Consider once more the multisets $A_M \is \setof{a:3, b:2, c:1}$ and $B_M \is \setof{a:1, b:1, c:2, d:1}$, for which the following hold:
    $$
    \begin{align*}
        \card{A_M} &= \sum_{s \in A_M} A_M(s)\\
                   &= A_M(a) + A_M(b) + A_M(c)\\
                   &= 3 + 2 + 1\\
                   &= 6\\
        \card{B_M} &= \sum_{s \in B_M} B_M(s)\\
                   &= B_M(a) + B_M(b) + B_M(c) + B_M(d)\\
                   &= 1 + 1 + 2 + 1\\
                   &= 5\\
        \card{A_M \cup B_M} &= 8\\
        \card{A_M \cap B_M} &= 3\\
        \card{A_M - B_M} &= 3\\
        \card{B_M - A_M} &= 2\\
    \end{align*}
    $$
\end{example}

```python
def card(multiset):
    return sum(multiset.values())

print("|{}| = {}".format(A, card(A)))
print("|{}| = {}".format(B, card(B)))
print("Union of {} and {} is {}".format(A, B, multiset_union(A, B)))
print("Intersection of {} and {} is {}".format(A, B, multiset_intersection(A, B)))
print("Relative complement of {} and {} is {}".format(A, B, A-B))
```

\begin{exercise}
Calculate the cardinality of the following multisets:

<ol>
<li>
$\setof{a:17}$
</li>
<li>
$\setof{\text{John}: 5, \text{Mary}: 5, \text{Bill}: 10}$
</li>
<li>
$\setof{a: 0, b: 0, c:0}$
</li>
</ol>
\end{exercise}

## Special operations for multisets

Since multisets are a generalization of sets, they allow for certain operations that would not make much sense with sets.
These are *multiset sum* ($\multisum$) and *scalar multiplication * ($\multimult$).

\begin{definition}
    Let $A_M$ and $B_M$ be two multisets and $n$ a natural number.
    Then
    <ul>
        <li>the multiset sum $A_M \multisum B_M$ maps every $a$ to $A_M(a) + B_M(a)$,</li>
        <li>the scalar multiplication $n \multimult A_M$ maps every $a$ to $n \mult A_M(a)$ (where $\mult$ denotes multiplication over natural numbers).</li>
    </ul>
\end{definition}

\begin{example}
    As in the previous examples, we will look at the multisets $A_M \is \setof{a:3, b:2, c:1}$ and $B_M \is \setof{a:1, b:1, c:2, d:1}$.
    For those two sets, $A_M \multisum B_M \is \setof{a:4, b:3, c:3, d:1}$, which is identical to $B_M \multisum A_M$.
    Furthermore, $3 \multimult A_M = \setof{a:9, b:6, c:3}$ whereas $3 \multimult B_M = \setof{a:3, b:3, c:6, d:3}$.
\end{example}

```python
def scalar_multiplication(A, n):
    return Counter({key: n * val for key, val in A.items()})

print("{} + {} = {}".format(A, B, A+B))
print("{} * {} = {}".format(3, A, scalar_multiplication(A, 3)))
print("{} * {} = {}".format(3, B, scalar_multiplication(B, 3)))
```

\begin{exercise}
Calculate the final result of the equations below.
If the result cannot be uniquely determined without additional assumptions, explain why.

<ol>
<li>
$3 \multimult (\setof{a:5, b:3}_M \multisum \setof{a:1, c:5, d:6}_M) - (\setof{a:5, b:3}_M \cap \setof{a:1, c:5, d:6}_M)$
</li>
<li>
$\setof{\text{John}, \text{John}} \multisum 3 \multimult \setof{\text{Mary}, \text{Mary}, \text{Mary}, \text{John}}_M$
</li>
<li>
$\setof{a:5, c:1}_M \cup \setof{a:3, b:3, c:3, d:3}_M \multisum \setof{a:1}_M$
</li>
</ol>
\end{exercise}
